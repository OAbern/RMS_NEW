<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqupt.mis.rms.dao.CQUPTRoleDao" >


  <resultMap id="BaseResultMap" type="com.cqupt.mis.rms.model.CQUPTRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <association column="role_level_id" property="roleLevel" javaType="com.cqupt.mis.rms.model.RoleLevel" />
  </resultMap>
  
  <resultMap type="com.cqupt.mis.rms.model.CQUPTRole" id="RolePurviewResultMap" extends="BaseResultMap">
  	<collection property="rolePurviews"  ofType="com.cqupt.mis.rms.model.RolePurview">
  	
  		<association property="purviewInfo" javaType="com.cqupt.mis.rms.model.ResourceInfo">
			<id column="resourceId" property="resourceId" jdbcType="INTEGER" />
		    <result column="resourceName" property="resourceName" jdbcType="VARCHAR" />
		    <result column="resourceUrl" property="resourceUrl" jdbcType="VARCHAR" />
		    <result column="resourceRemark" property="resourceRemark" jdbcType="VARCHAR" />
  		</association>
  	
  	</collection>
  </resultMap>
  
  <resultMap type="com.cqupt.mis.rms.model.CQUPTRole" id="RolePurviewDynResultMap" extends="BaseResultMap">
  	<collection property="rolePurviewDyns" ofType="com.cqupt.mis.rms.model.RolePurviewDyn">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="input" property="input" jdbcType="INTEGER"/>
		<result column="manage" property="manage" jdbcType="INTEGER"/>
		<result column="approve" property="approve" jdbcType="INTEGER"/>
		<result column="statistics" property="statistics" jdbcType="INTEGER"/>
		<association column = "class_id"  property="researchClass" resultMap="com.cqupt.mis.rms.dao.ResearchClassDao.ResearchClass"/>

  	</collection>
  </resultMap>

	<!--用户和权限的结果映射-->
	<resultMap id="UserAndRoleMap" type="com.cqupt.mis.rms.model.UserAndRole">
		<id column="user_id" property="userId" jdbcType="VARCHAR"/>
		<association column="user_id" property="user" javaType="com.cqupt.mis.rms.model.CQUPTUser">
				<id column="user_id" property="userId" jdbcType="VARCHAR"/>
				<result column="user_name" property="userName" jdbcType="VARCHAR"/>
		</association>
		<collection property="roleList" ofType="com.cqupt.mis.rms.model.CQUPTRole">
			<id column="role_id" property="roleId" jdbcType="INTEGER"/>
			<result column="role_name" property="roleName" jdbcType="VARCHAR"/>
		</collection>
	</resultMap>
  
  <sql id="Base_Column_List" >
    role_id, role_name, role_level_id, description
  </sql>
  
  	<!-- *****************************SQL********************************* -->

	<!--根据角色id查找角色-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cqupt_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
	<!-- 登录时校验用户名和角色是否正确 -->
  <select id="findRoleLevel" resultMap="BaseResultMap">
  	SELECT r.`role_id`, `role_name`, `role_level_id`, `description`  
	FROM `cqupt_role` AS r, `user_role`
	WHERE user_role.`user_id` = #{userId,jdbcType=VARCHAR} AND `user_role`.`role_id` = #{roleLevelId,jdbcType=INTEGER} 
			AND r.`role_id` = user_role.`role_id`
  </select>

	<!--查找所有角色-->
  <select id="findAll" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from cqupt_role
  </select>

	<!--根据角色Id查找静态资源权限-->
  <select id="findRolePurviewByRoleId" resultMap="RolePurviewResultMap" parameterType="java.lang.Integer">
  	select
  	 <include refid="Base_Column_List" />,
  	 resource_info.resourceId,
  	 resource_info.resourceName,
  	 resource_info.resourceUrl,
  	 resource_info.resourceRemark,
  	 resource_info.parentId
  	 from cqupt_role
  	 left join role_purview_fixed on cqupt_role.role_id = role_purview_fixed.roleId
  	 left join resource_info on role_purview_fixed.purviewId = resource_info.resourceId
  	 where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <!-- 根据角色Id和父类资源查找静态资源权限 -->
  <select id="findRolePurviewByRoleIdAndParent" resultMap="RolePurviewResultMap" parameterType="java.lang.Integer">
  	select
  	 <include refid="Base_Column_List" />,
  	 resource_info.resourceId,
  	 resource_info.resourceName,
  	 resource_info.resourceUrl,
  	 resource_info.resourceRemark,
  	 resource_info.parentId
  	 from cqupt_role
  	 left join role_purview_fixed on cqupt_role.role_id = role_purview_fixed.roleId
  	 left join resource_info on role_purview_fixed.purviewId = resource_info.resourceId
  	 where role_id = #{roleId,jdbcType=INTEGER}
  	 and   resource_info.parentId = #{parentId,jdbcType=INTEGER}
  </select>

	<!--根据角色Id查找角色动态权限-->
  <select id="findRolePurviewDynRoleId" resultMap="RolePurviewDynResultMap" parameterType="java.lang.Integer">
  	select
  	 cqupt_role.role_id,
  	 cqupt_role.role_name,
  	 cqupt_role.role_level_id,
  	 cqupt_role.description,
  	 role_purview_dynamic.id,
  	 role_purview_dynamic.input,
  	 role_purview_dynamic.manage,
  	 role_purview_dynamic.approve,
  	 role_purview_dynamic.statistics,
  	 research_class.class_id,
  	 research_class.class_name,
  	 research_class.class_des,	 
  	 research_class.class_remark,
  	 research_class.is_delete,
  	 research_class.order,
  	 research_class.submittime,
  	 research_class.parent_id
  	 from cqupt_role 
  	 left join role_purview_dynamic  on cqupt_role.role_id = role_purview_dynamic.role_id
  	 left join research_class on role_purview_dynamic.class_id = research_class.class_id
  	 where cqupt_role.role_id = #{roleId,jdbcType=INTEGER}
  </select>

	<!--添加角色信息-->
	<insert id="add" parameterType="com.cqupt.mis.rms.model.CQUPTRole" >
		insert into `cqupt_role` (`role_name`, `description`)
		values (#{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
	</insert>

	<!--根据角色名字查找角色信息-->
	<select id="findByName" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM `cqupt_role`
		WHERE `role_name` = #{rName, jdbcType=VARCHAR}
	</select>

	<!--删除角色信息-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from cqupt_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>

	<!--修改角色信息-->
	<update id="modifyByPrimaryKey" parameterType="com.cqupt.mis.rms.model.CQUPTRole" >
		update cqupt_role
		set role_name = #{roleName,jdbcType=VARCHAR},
		<if test="roleLevel != null">
			role_level_id = #{roleLevel.id,jdbcType=INTEGER},
		</if>
		description = #{description,jdbcType=VARCHAR}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>

	<!--查找所有的用户及其角色（包含极少的字段）-->
	<select id="findAllUserAndRole" resultMap="UserAndRoleMap">
		SELECT u.`user_id`, ur.`role_id`,u.user_name,r.`role_name`
		FROM `cqupt_user` AS u
		LEFT JOIN  `user_role` AS `ur` ON ur.`user_id` = u.`user_id`
		LEFT JOIN `cqupt_role` AS r ON ur.`role_id` = r.`role_id`
		<!--
		SELECT ur.`user_id`, ur.`role_id`,u.user_name,r.`role_name`
		FROM `user_role` AS `ur`,`cqupt_user` AS u,`cqupt_role` AS r
		WHERE ur.`user_id` = u.`user_id` AND ur.`role_id`=r.`role_id`
		-->
	</select>

</mapper>